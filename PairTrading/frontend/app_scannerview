from PairTrading.frontend.charting import DashChart
from PairTrading.backend.data_wrangler import DataWrangler
from PairTrading.frontend.data_utils import DataUtils
from PairTrading.frontend.pair import Pair

from PairTrading.src import _constant
import pandas as pd

from dash import Dash, html, dcc, Input, Output  # pip install dash
import dash_bootstrap_components as dbc   # pip install dash-bootstrap-components

dw = DataWrangler()

app = Dash(__name__, external_stylesheets=[dbc.themes.BOOTSTRAP])
d = DataUtils()

tickers = dw.market_snapshot().ticker

charts = []
layout_elements= []

print(tickers[0])

i = 0
for t in range(50):
    print(i)
    df = dw.market_data(tickers[t], n_days=1)
    if df.empty:
        continue

    """ chart_compare = DashChart(tickers[t], "compare")
    chart_compare.data = df
    chart_compare.compareData = df
    chart_compare.set_callback_app(app)

    pairViewCard = [
        dbc.CardHeader(html.H3("Pair A / B", className="card-title")),
        dbc.CardBody([
            dbc.Row([
                #charts
                dbc.Col([
                    dbc.Row(dbc.Col("pair price")),
                    dbc.Row([
                        dbc.Col(chart_compare.get_layout(),width=6),
                        dbc.Col("chart_ratio.get_layout()",width=6),
                    ])
                ], width="8"),                
            ])
        ])
    ] """

    """ chartCard = dbc.Card(
        pairViewCard
    )  
    
    layout_elements.append(chartCard) """

    i = i+1
    if i >= 20:
        break

    

    

app.layout = html.Div(
    #dbc.Pagination(max_value=10, first_last=True, previous_next=True),
    layout_elements,
)


app.run_server(debug=True, port=8060)